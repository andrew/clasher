// Generated by CoffeeScript 1.6.2
(function() {
  var contains, count, countToUse, countryArr, eventJson, fs, i, k, tag, tagArr, z;

  contains = function(a, obj) {
    var i;

    i = 0;
    while (i < a.length) {
      if (a[i] === obj) {
        return true;
      }
      i++;
    }
    return false;
  };

  fs = require("fs");

  eventJson = require("./events.json");

  countryArr = [];

  tagArr = [];

  i = 0;

  while (i < eventJson.length) {
    countToUse = eventJson[i].country;
    if (countToUse.length > 0) {
      if (eventJson[i].country in countryArr === false) {
        countryArr[countToUse] = new Array();
      }
      if (contains(countryArr[countToUse], eventJson[i].city) === false) {
        countryArr[countToUse].push(eventJson[i].city);
      }
      if (tagArr.hasOwnProperty(eventJson[i].city) === false) {
        tagArr[eventJson[i].city] = new Array();
      }
      z = 0;
      while (z < eventJson[i].tags.length) {
        if (contains(tagArr[eventJson[i].city], eventJson[i].tags[z]) === false) {
          tagArr[eventJson[i].city].push(eventJson[i].tags[z]);
        }
        z++;
      }
    }
    if (i === eventJson.length - 1) {
      count = {};
      tag = {};
      countryArr = countryArr.sort(function (a, b) {
    return a.toLowerCase().localeCompare(b.toLowerCase());
});
/*      for (k in countryArr) {
        countryArr[k] = countryArr[k].sort();
        count[k] = countryArr[k];
      }*/
      tagArr = tagArr.sort(function (a, b) {
    return a.toLowerCase().localeCompare(b.toLowerCase());
});
      console.log(tagArr);
     /* for (k in tagArr) {
        tagArr[k] = tagArr[k].sort();
        tag[k] = tagArr[k];
      }*/
      fs.writeFile("countryCities.json", JSON.stringify(count, null, 4), function(err) {
        if (err) {
          return console.log("Error writing country -> city mapping!");
        } else {
          return console.log("country -> city mapping saved!");
        }
      });
      fs.writeFile("cityTags.json", JSON.stringify(tag, null, 4), function(err) {
        if (err) {
          return console.log("Error writing city -> tag mapping!");
        } else {
          return console.log("city -> tag mapping saved!");
        }
      });
    }
    i++;
  }

}).call(this);
